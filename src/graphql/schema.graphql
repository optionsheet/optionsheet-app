scalar Date

type Query {
  users: [User]
  user(id: ID!): User
  roles: [Role]
  projects: [Project]
  trades: [Trade]
}

type User {
  id: ID
  username: String
  email: String
  emailConfirmed: Boolean
  passwordHash: String
  roles: [Role]
  imageUrl: String
  projects: [Project]
}

type Role {
  id: ID
  name: String
}

type Project {
  id: ID
  name: String
  description: String
  trades: [Trade]
  tags: [String]
  lastEdited: Date
  user: User
}

type Trade {
  id: ID
  symbol: String
  openDate: Date
  closeDate: Date
  legs: [Leg]
  openingNote: String
  closingNote: String
  tags: [String]
  project: Project
}

enum Side {
  Buy,
  Sell
}

enum PutCall {
  Put,
  Call
}

type Leg {
  id: ID
  side: Side,
  putCall: PutCall
  quantity: Int
  expiration: Date
  strike: Float
  openPrice: Float
  closePrice: Float
  trade: Trade
}